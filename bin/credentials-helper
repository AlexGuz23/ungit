#!/usr/bin/env node
const url = require('url');
const http = require('http');
const lodash = require('lodash');
const winston = require('winston');

// node credentialsHelperPath socketId config.port remote [rootPath] action
const socketId = process.argv[2];
const port = process.argv[3];
const remote = process.argv[4];
let action = process.argv[5];

// swap the action with rootPath if needed
let rootPath;
if (process.argv.length > 6) {
    rootPath = action;
    action = process.argv[6];
}

function join(...path) {
    return path.map(s => lodash.trim(s, '/')).join('/')
}

function makeUrl() {
    const urlObject = {
        port: port,
        protocol: 'http',
        hostname: 'localhost',
        pathname: '/api/credentials',
        query: {remote, socketId}
    };

    if (rootPath) {
        urlObject.pathname = join(rootPath, urlObject.pathname)
    }
    return url.format(urlObject);
}

winston.remove(winston.transports.Console);
winston.info(`Credentials helper invoked; port:${port} socketId:${socketId}`);

if (action === 'get') {
    const localUrl = makeUrl();
    winston.info(`Getting credentials from: [ ${localUrl} ]`);
    http.get(localUrl, (res) => {
        winston.info('Got credentials');
        res.on('data', (body) => {
            const data = JSON.parse(body);
            console.log(`username=${data.username}`);
            console.log(`password=${data.password ? data.password : ''}`);
        });
    }).on('error', (err) => {
        winston.error('Error getting credentials, couldn\'t query server', err);
    });
} else {
    winston.info(`Unhandled action: ${action}`);
}
